# Generated by Django 4.0.10 on 2024-06-03 07:41

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DeviceBasicInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_name', models.CharField(default='Device Name', max_length=30)),
                ('device_location', models.CharField(default='Device Location', max_length=30)),
                ('mac_address', models.CharField(default=None, max_length=30, null=True)),
                ('system_boot_time', models.DateTimeField(auto_now=True)),
                ('product_model', models.CharField(default=None, max_length=30, null=True)),
                ('firmware_version', models.CharField(default=None, max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DeviceImageInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flip', models.BooleanField(default=False)),
                ('mirror', models.BooleanField(default=False)),
                ('icr', models.IntegerField(choices=[(0, 'Auto'), (1, 'Night'), (2, 'Day'), (3, 'Schedule')], default=0)),
                ('icr_day_mode_start', models.TimeField(default=datetime.time(6, 0))),
                ('icr_day_mode_end', models.TimeField(default=datetime.time(18, 0))),
                ('bw_mode', models.IntegerField(choices=[(0, 'By Ir Type'), (1, 'Bw'), (2, 'Color')], default=0)),
                ('wb_mode', models.IntegerField(choices=[(0, 'Atw'), (1, 'Incandescent Light'), (2, 'Cool Light'), (3, 'Sun Light'), (4, 'Cloudy'), (5, 'Sun Shady')], default=0)),
                ('flickness', models.IntegerField(choices=[(0, 'Auto'), (1, 'Flicker Free 50Hz'), (2, 'Flicker Free 60Hz')], default=0)),
                ('day_mode_exposure', models.IntegerField(choices=[(0, 'Auto'), (1, 'Manual')], default=0)),
                ('day_exposure_time', models.IntegerField(default=30)),
                ('day_exposure_Gain', models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)])),
                ('night_mode_exposure', models.IntegerField(choices=[(0, 'Auto'), (1, 'Manual'), (2, 'Off')], default=2)),
                ('night_exposure_time', models.IntegerField(default=30)),
                ('night_exposure_Gain', models.IntegerField(default=15, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)])),
                ('brightness', models.IntegerField(default=50, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('sharpness', models.IntegerField(default=50, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('contrast', models.IntegerField(default=50, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('hue', models.IntegerField(default=50, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('saturation', models.IntegerField(default=50, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('wdr', models.IntegerField(default=None, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('brightness_night', models.IntegerField(default=50, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('sharpness_night', models.IntegerField(default=50, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('contrast_night', models.IntegerField(default=50, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('hue_night', models.IntegerField(default=50, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('saturation_night', models.IntegerField(default=50, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('wdr_night', models.IntegerField(default=None, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('defog', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='DeviceNetworkInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('static_ip_address', models.CharField(default=None, max_length=30, null=True)),
                ('dhcp_ip_address', models.CharField(default=None, max_length=30, null=True)),
                ('netmask', models.CharField(default=None, max_length=30, null=True)),
                ('gateway', models.CharField(default=None, max_length=30, null=True)),
                ('dns_primary', models.CharField(default=None, max_length=30, null=True)),
                ('dns_secondary', models.CharField(default=None, max_length=30, null=True)),
                ('ntp_address', models.CharField(default=None, max_length=30, null=True)),
                ('from_dhcp', models.BooleanField(default=None, null=True)),
                ('update_per_minutes', models.IntegerField(default=10)),
                ('enable_http', models.BooleanField(default=True)),
                ('http_port', models.IntegerField(default=80)),
                ('enable_rtsp', models.BooleanField(default=True)),
                ('rtsp', models.IntegerField(default=554)),
                ('enable_ftp', models.BooleanField(default=True)),
                ('ftp', models.IntegerField(default=21)),
                ('enable_upnp', models.BooleanField(default=True)),
                ('enable_arp_ping', models.BooleanField(default=True)),
                ('rtsp_auth', models.IntegerField(choices=[(0, 'Anonymous'), (1, 'Authentication')], default=0)),
                ('rtsp_auth_username', models.CharField(default=None, max_length=30, null=True)),
                ('rtsp_auth_password', models.CharField(default=None, max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DeviceVideoInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('encode_type_main', models.IntegerField(choices=[(0, 'H264'), (1, 'H265'), (2, 'Mjpeg')], default=1)),
                ('bit_rate_main', models.IntegerField(default=3072, validators=[django.core.validators.MinValueValidator(512), django.core.validators.MaxValueValidator(8192)])),
                ('quality_main', models.IntegerField(default=40, validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(50)])),
                ('url_main', models.CharField(default='v01', max_length=30)),
                ('jpeg_quality_main', models.IntegerField(default=50, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(80)])),
                ('gop_main', models.IntegerField(default=30, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(90)])),
                ('resolution_width_main', models.IntegerField(default=2592)),
                ('resolution_height_main', models.IntegerField(default=1944)),
                ('frame_rate_main', models.IntegerField(default=30, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)])),
                ('video_encoding_main', models.IntegerField(choices=[(0, 'Vbr'), (1, 'Cbr')], default=1)),
                ('encode_type_sub', models.IntegerField(choices=[(0, 'H264'), (1, 'H265'), (2, 'Mjpeg')], default=1)),
                ('bit_rate_sub', models.IntegerField(default=1024, validators=[django.core.validators.MinValueValidator(256), django.core.validators.MaxValueValidator(4096)])),
                ('quality_sub', models.IntegerField(default=40, validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(50)])),
                ('url_sub', models.CharField(default='v02', max_length=30)),
                ('jpeg_quality_sub', models.IntegerField(default=50, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(80)])),
                ('gop_sub', models.IntegerField(default=30, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(90)])),
                ('resolution_width_sub', models.IntegerField(default=960)),
                ('resolution_height_sub', models.IntegerField(default=720)),
                ('frame_rate_sub', models.IntegerField(default=30, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)])),
                ('video_encoding_sub', models.IntegerField(choices=[(0, 'Vbr'), (1, 'Cbr')], default=1)),
                ('encode_type_third', models.IntegerField(choices=[(0, 'H264'), (1, 'H265'), (2, 'Mjpeg')], default=2)),
                ('bit_rate_third', models.IntegerField(default=1500, validators=[django.core.validators.MinValueValidator(256), django.core.validators.MaxValueValidator(2048)])),
                ('quality_third', models.IntegerField(default=40, validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(50)])),
                ('url_third', models.CharField(default='v03', max_length=30)),
                ('jpeg_quality_third', models.IntegerField(default=50, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(80)])),
                ('gop_third', models.IntegerField(default=30, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(90)])),
                ('resolution_width_third', models.IntegerField(default=1280)),
                ('resolution_height_third', models.IntegerField(default=960)),
                ('frame_rate_third', models.IntegerField(default=15, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(15)])),
                ('video_encoding_third', models.IntegerField(choices=[(0, 'Vbr'), (1, 'Cbr')], default=1)),
            ],
        ),
        migrations.CreateModel(
            name='DeviceInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('basic_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='device_info.devicebasicinfo')),
                ('image_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='device_info.deviceimageinfo')),
                ('network_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='device_info.devicenetworkinfo')),
                ('video_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='device_info.devicevideoinfo')),
            ],
        ),
    ]
